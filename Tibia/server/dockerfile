# Define a imagem base
FROM        ubuntu:20.04

RUN --mount=type=cache,target=/var/cache/apt \
	apt-get update && apt-get install -y --no-install-recommends cmake git \
	unzip build-essential ca-certificates curl zip unzip tar \
	pkg-config ninja-build autoconf automake libtool \
	python3 \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/*

WORKDIR /opt
COPY vcpkg.json /opt
RUN vcpkgCommitId=$(grep '.builtin-baseline' vcpkg.json | awk -F: '{print $2}' | tr -d '," ') \
	&& echo "vcpkg commit ID: $vcpkgCommitId" \
	&& git clone https://github.com/Microsoft/vcpkg.git \
	&& cd vcpkg \
	&& git checkout "$vcpkgCommitId" \
	&& ./bootstrap-vcpkg.sh

WORKDIR /opt/vcpkg
COPY vcpkg.json /opt/vcpkg/
RUN --mount=type=cache,target=/var/cache/vcpkg \
	/opt/vcpkg/vcpkg --feature-flags=binarycaching,manifests,versions install

WORKDIR /srv/build
COPY src ./src
COPY cmake ./cmake
COPY recompile.sh CMakeLists.txt CMakePresets.json vcpkg.json ./
RUN ./recompile.sh "/opt"

# Stage 3: execute

COPY --from=build /srv/build/build/linux-release/bin/canary /bin/canary

# Define o usuário padrão e o diretório de trabalho
USER        container
ENV         USER=container HOME=/home/container
WORKDIR     /home/container

# Copia o script de entrada para o contêiner e define como comando padrão
COPY ./entrypoint.sh /entrypoint.sh
CMD ["/bin/bash", "/entrypoint.sh", "canary"]
