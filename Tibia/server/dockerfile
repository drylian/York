# Use Debian Buster slim as base image
FROM         --platform=$TARGETOS/$TARGETARCH debian:bullseye-slim

ENV          DEBIAN_FRONTEND noninteractive
RUN          useradd -m -d /home/container -s /bin/bash container
RUN          ln -s /home/container/ /nonexistent
ENV          USER=container HOME=/home/container

# Install Tibia dependencies
RUN apt-get update && \
    apt-get install -y \
        gcc \
        g++ \
        libgcc1 \
        libc++-dev \
        gdb \
        libc6 \
        xz-utils \
        liblzo2-2 \
        iproute2 \
        libsdl1.2debian \
        libsdl2-2.0-0 \
        libicu67 \
        liblua5.3-0 \
        libz-dev \
        procps \
        libstdc++6 \
        luajit \
    && rm -rf /var/lib/apt/lists/*

# Install NGINX and PHP
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        nginx \
        ca-certificates \
        curl \
        gnupg \
        software-properties-common \
        apt-transport-https \
        wget \
        lsb-release \
    && apt-key adv --fetch-keys https://packages.sury.org/php/apt.gpg \
    && echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/php.list \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        php8.1 \
        php8.1-cli \
        php8.1-gd \
        php8.1-mysqli \
        php8.1-mysql \
        php8.1-pdo \
        php8.1-mbstring \
        php8.1-tokenizer \
        php8.1-bcmath \
        php8.1-xml \
        php8.1-simplexml \
        php8.1-xmlwriter \
        php8.1-xmlreader \
        php8.1-fpm \
        php8.1-curl \
        php8.1-zip \
        php8.1-phar \
        php8.1-intl \
        php8.1-ctype \
        php8.1-posix \
        php8.1-fileinfo \
        php8.1-ftp \
        php8.1-bz2 \
        php8.1-opcache \
        php8.1-gmp \
        php8.1-imap \
        php8.1-ldap \
        php8.1-exif \
        php8.1-soap \
        php8.1-odbc \
        php8.1-gettext \
        php8.1-iconv \
        php8.1-tokenizer \
    && rm -rf /var/lib/apt/lists/*

# Copy Composer binary from Composer image
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set user and working directory
WORKDIR     /home/container

STOPSIGNAL SIGINT

COPY        --chown=container:container ./entrypoint.sh /entrypoint.sh
RUN         chmod +x /entrypoint.sh

# Define default command
CMD ["bash", "/entrypoint.sh"]
