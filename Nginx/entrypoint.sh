#!/bin/ash
# parece sacanagem mais aqui dentro tem um espa√ßo que deve ser usado caso queira colocar vers√£o " " o texto todo "vers√£o: "
# icones üî¥ üü† üü° üü¢ üîµ üü£ üü§ ‚ö´ ‚ö™ ‚úÖ ‚ùå 
# Vers√£o do Entrypoint
entrypoint_vurl="https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/Versao_Atual"
entrypoint_version=$(curl -s "$entrypoint_vurl" | grep "Entrypoint: " | awk '{print $2}')
# Aguarde at√© que o cont√™iner seja totalmente inicializado
sleep 1
#Verifica a Arquitetura do Docker
Arquitetura=$([ "$(uname -m)" == "x86_64" ] && echo "amd64" || echo "arm64")
# Verifica se a conex√£o vai ser local ou externa
if [ "${MODE_CONEXAO}" == "1" ]; then
Online_Mode=""
Online_Mode2=""
Online_Mode3=""
Online_Mode4=""
else
Online_Mode="deny all;"
Online_Mode2="allow 127.0.0.1;"
Online_Mode3="allow 192.168.0.0/24;"
Online_Mode4="allow 172.17.0.0/16;"
fi
# URL para a vers√£o mais recente
latest_version_url="https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/Versao_Atual"

# Extrai a vers√£o atual do arquivo local version.sh
current_version=$(grep "Instala√ß√£o: " ./Status/Versao_Atual | awk '{print $2}')

# Extrai a vers√£o mais recente da URL
latest_version=$(curl -s "$latest_version_url" | grep "Instala√ß√£o: " | awk '{print $2}')

# Cores do Sistema
bold=$(echo -en "\e[1m")
lightgreen=$(echo -en "\e[92m")
vermelho=$(echo -en "\e[31m")
# ${bold}${vermelho}

if [ -z ${SUPORTE_ATIVO} ] || [ "${SUPORTE_ATIVO}" == "1" ]; then
  echo "${bold}${lightgreen}=============================================================================="
  echo "${bold}${lightgreen}==>                                                                        <=="
  echo "${bold}${lightgreen}==>                     - - - Script  Entrypoint - - -                     <=="
  echo "${bold}${lightgreen}==>                                                                        <=="
  echo "${bold}${lightgreen}=============================================================================="
  echo "${bold}${lightgreen}==>                                                                        <=="
  echo "${bold}${lightgreen}==>                  - - - Informa√ß√µes da Maquina. - - -                   <=="
  echo "${bold}${lightgreen}==>                                                                        <=="
  # Vefirica Arquitetura da Maquina
  if [ "${Arquitetura}" == "arm64" ]; then 
      echo "${bold}${lightgreen}==> üîµ Arquitetura :Alpine Arm64x                                           <=="
    else
      echo "${bold}${lightgreen}==> üîµ Arquitetura :Alpine AMD64x                                           <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
  echo "${bold}${lightgreen}==> ‚úÖ Vers√£o do Entrypoint: $entrypoint_version                                            <=="
  echo "${bold}${lightgreen}==>                                                                        <=="
  # Verifica Vers√£o da Instala√ß√£o
  if [ -z "$current_version" ]; then
  echo "${bold}${lightgreen}==> ‚ö´ Vers√£o da instala√ß√£o: Pre-instala√ß√£o, n√£o disponivel ou customizada. <=="
  else
  echo "${bold}${lightgreen}==> ‚úÖ Vers√£o da Instala√ß√£o Atual: $current_version                                      <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
  # Verifica Se Atualiza√ß√£o Automatica est√° ativada
  if [ "${AUTO_UPDATE}" == "1" ]; then
  echo "${bold}${lightgreen}==> ‚úÖ Sistema de Atualiza√ß√£o Automatica est√° ativado.                      <=="
  else
  echo "${bold}${lightgreen}==> ‚ùå Sistema de Atualiza√ß√£o Automatica est√° ${bold}${vermelho}desativado${bold}${lightgreen}.                   <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
  # Verifica Se Repara√ß√£o Automatica est√° ativada
  if [ "${REPARAR_SISTEMA}" == "1" ]; then
  echo "${bold}${lightgreen}==> ‚úÖ Sistema de Repara√ß√£o Automatica est√° ativada.                        <=="
  else
  echo "${bold}${lightgreen}==> ‚ùå Sistema de Repara√ß√£o Automatica est√° ${bold}${vermelho}desativado${bold}${lightgreen}.                     <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
  # Verifica Se HTML esta local ou na nuvem
  if [ "${HTML_LOCAL}" == "1" ]; then
  echo "${bold}${lightgreen}==> ‚úÖ Sistema de HTML est√° na nuvem(Padr√£o).                               <=="
  else
  echo "${bold}${lightgreen}==> ‚ùå Sistema de HTML est√° no local (N√£o Recomendado). ${bold}${vermelho}desativado${bold}${lightgreen}.         <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
  # Verifica Se O MODE_CONEXAO √© local ou √© externo
  if [ "${MODE_CONEXAO}" == "1" ]; then
  echo "${bold}${lightgreen}==> üü° Conex√£o Externa Ativada(Permite qualquer um Ver e baixar no Site).   <=="
  else
  echo "${bold}${lightgreen}==> üü¢ Conex√£o Interna Ativada(Apenas a maquina pode baixar e ver o site).  <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
  # Verifica Se O MODE_CONEXAO √© local ou √© externo
  if [ "${DEFAULT_CONF}" == "1" ]; then
  echo "${bold}${lightgreen}==> ‚úÖ Default.conf Automatica est√° ativada.                                <=="
  else
  echo "${bold}${lightgreen}==> ‚ùå Default.conf Automatica est√° ${bold}${vermelho}desativada${bold}${lightgreen}.                             <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
  echo "${bold}${lightgreen}=============================================================================="
  echo "${bold}${lightgreen}==>                                                                        <=="
  echo "${bold}${lightgreen}==>                           Verifica√ß√£o do Egg                           <=="
  echo "${bold}${lightgreen}==>                                                                        <=="
  # Verifica se o Suporte_Ativo existe no egg
  if [ -z "$SUPORTE_ATIVO" ]; then
  echo "${bold}${lightgreen}==> ‚ùå Variante do Suporte(ativar/desativar) do egg n√£o est√° definida.      <=="
  else
  echo "${bold}${lightgreen}==> ‚úÖ Variante do Suporte(ativar/desativar) do egg est√° definida.          <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
  # Verifica se o AUTO_UPDATE existe no egg
  if [ -z "$AUTO_UPDATE" ]; then
  echo "${bold}${lightgreen}==> ‚ùå Variante do Atualiza√ß√£o(ativar/desativar) do egg n√£o est√° definida.  <=="
  else
  echo "${bold}${lightgreen}==> ‚úÖ Variante do Atualiza√ß√£o(ativar/desativar) do egg est√° definida.      <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
   # Verifica se o REPARAR_SISTEMA existe no egg
  if [ -z "${REPARAR_SISTEMA}" ]; then
  echo "${bold}${lightgreen}==> ‚ùå Variante do Repara√ß√£o(ativar/desativar) do egg n√£o est√° definida.    <=="
  else
  echo "${bold}${lightgreen}==> ‚úÖ Variante do Repara√ß√£o(ativar/desativar) do egg est√° definida.        <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
   # Verifica se o HTML_LOCAL existe no egg
  if [ -z "${HTML_LOCAL}" ]; then
  echo "${bold}${lightgreen}==> ‚ùå Variante do HTML(ativar/desativar) do egg n√£o est√° definida.         <=="
  else
  echo "${bold}${lightgreen}==> ‚úÖ Variante do HTML(ativar/desativar) do egg est√° definida.             <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
   # Verifica se o MODE_CONEXAO existe no egg
  if [ -z "${MODE_CONEXAO}" ]; then
  echo "${bold}${lightgreen}==> ‚ùå Variante da Conex√£o(ativar/desativar) do egg n√£o est√° definida.      <=="
  else
  echo "${bold}${lightgreen}==> ‚úÖ Variante da Conex√£o(ativar/desativar) do egg est√° definida.          <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
   # Verifica se o MODE_CONEXAO existe no egg
  if [ -z "${DEFAULT_CONF}" ]; then
  echo "${bold}${lightgreen}==> ‚ùå Variante da Default.conf(ativar/desativar) do egg n√£o est√° definida. <=="
  else
  echo "${bold}${lightgreen}==> ‚úÖ Variante da Default.conf(ativar/desativar) do egg est√° definida.     <=="
  fi
  echo "${bold}${lightgreen}==>                                                                        <=="
  echo "${bold}${lightgreen}=============================================================================="
  # Avisa caso exista variantes n√£o definidas
  if [ -z "$AUTO_UPDATE" ] || [ -z "$SUPORTE_ATIVO" ] || [ -z "${REPARAR_SISTEMA}" ] || [ -z "${HTML_LOCAL}" ] || [ -z "${MODE_CONEXAO}" ] || [ -z "${DEFAULT_CONF}" ]; then
  echo "${bold}${lightgreen}==>                                                                        <=="
  echo "${bold}${lightgreen}==>   ${bold}${vermelho}Uma ou mais Variantes est√£o indefinidas neste egg, recomendado que${bold}${lightgreen}   <=="
  echo "${bold}${lightgreen}==>             ${bold}${vermelho}o atualize para vers√£o mais recente do github.${bold}${lightgreen}             <=="
  echo "${bold}${lightgreen}==>            ${bold}${vermelho} https://github.com/drylian/Eggs/tree/main/Eggs ${bold}${lightgreen}            <=="
  echo "${bold}${lightgreen}==>                                                                        <=="
  echo "${bold}${lightgreen}=============================================================================="
  echo " "
  fi
  # Sistema de Erro------------------------------------------------
    if [[ -f "./Status/Formatar_Sistema" ]]; then
    echo "${bold}${lightgreen}==> üî¥ Detectado Erro no Entrypoint."
    echo "${bold}${lightgreen}==> üî¥ Iniciando Script de Limpeza."
    rm -rf ./nginx
    rm -rf ./Status
    rm -rf ./Explorer
    rm -rf ./tmp
    rm -rf ./Cache
    rm -rf ./logs
    rm ./index.html
    echo "${bold}${lightgreen}==> üî¥ Terminado, Iniciando Scripts padr√µes."
    else
    echo " "
    fi
  # Fim Sistema de Erro--------------------------------------------

  # Atualiza√ß√µes---------------------------------------------------
    echo "${bold}${lightgreen}==> üü¢ Iniciando Script."

    if [ "${AUTO_UPDATE}" == "1" ]; then
    echo "${bold}${lightgreen}==> üü† Iniciando Verifica√ß√£o de Atualiza√ß√µes."
      if [ -z "$current_version" ] || [ "$current_version" != "$latest_version" ]; then
      echo "${bold}${lightgreen}==> üü† Buscando Atualiza√ß√µes."
      echo "${bold}${lightgreen}==> üü† Nova vers√£o encontrada: $latest_version, preparando para atualiza√ß√£o."
      rm -rf ./nginx
      rm -rf ./Status
      rm -rf ./Explorer
      rm -rf ./tmp
      rm -rf ./Cache
      rm -rf ./logs
      rm ./index.html
      echo "${bold}${lightgreen}==> üü† iniciando script de instala√ß√£o da nova vers√£o:$latest_version."
      else
      echo "${bold}${lightgreen}==> üü¢ Verifica√ß√£o de Atualiza√ß√µes Detectou que a Sua vers√£o √© a mais atual."
      fi
    else
    echo "${bold}${lightgreen}==> üî¥ Verifica√ß√£o de Atualiza√ß√µes Desativado, Pulando etapa."
    fi
  # Fim Atualiza√ß√µes-----------------------------------------------
   
  # Sistema do Nginx-----------------------------------------------
   if [[ -f "./Status/Nginx_instalador" ]]; then
      echo "${bold}${lightgreen}==> üü¢ Nginx foi detectado, pulando Download."
   else
      echo "${bold}${lightgreen}==> üî¥ Verificador do Nginx ${bold}${vermelho}n√£o foi detectado ${bold}${lightgreen}, Iniciando download."
      mkdir ./Cache
      git clone -q https://github.com/finnie2006/ptero-nginx ./Cache
      mkdir ./nginx
      cp -r ./Cache/nginx/* ./nginx
      rm -rf ./Cache
      mkdir ./Status
      curl -s https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/Leiame.txt  -o ./Status/Leia-me.txt
      touch ./Status/Nginx_instalador
    fi
  # Fim do Nginx---------------------------------------------------

  # Sistema do Nginx Explorador------------------------------------
   if [[ -f "./Status/Explorer_instalador" ]]; then
      echo "${bold}${lightgreen}==> üü¢ Nginx Explorer foi detectado, pulando Download."
   else
      echo "${bold}${lightgreen}==> üî¥ Verificador do Nginx Explorer ${bold}${vermelho}n√£o foi detectado ${bold}${lightgreen}, Iniciando download."
      mkdir ./Explorer
      
      git clone -q https://github.com/drylian/nginx-explorer ./Explorer
      touch ./Status/Explorer_instalador
    fi
  # Fim do Nginx Explorador----------------------------------------

  # Sistema das Logs-----------------------------------------------
   if [[ -f "./Status/Pasta_instalador" ]]; then
      echo "${bold}${lightgreen}==> üü¢ Verificador da Logs foi detectado, Executando procedimento padr√£o da pasta Logs."
      mkdir ./Cache
      mv ./logs/* ./Cache
      rm -r ./logs
      mkdir ./logs >/dev/null
      mv ./Cache/* ./logs
      rm -r ./Cache
   else
      echo "${bold}${lightgreen}==> üî¥ Verificador da Pasta Logs ${bold}${vermelho}n√£o foi detectado ${bold}${lightgreen}, Criando."
      mkdir ./logs >/dev/null
      touch ./Status/Pasta_instalador
    fi
  # Fim das Logs---------------------------------------------------

# Sistema do default.conf----------------------------------------
if [[ -f "./Status/Default.conf_instalado" ]]; then
echo "${bold}${lightgreen}==> üü¢ Default.conf ja carregado, executando Padr√µes no Break."
if [ -z "${DEFAULT_CONF}" ] || [ "${DEFAULT_CONF}" == "1" ]; then
rm ./nginx/conf.d/default.conf
cat > ./nginx/conf.d/default.conf << EOL
server {
    listen ${SERVER_PORT};
    server_name "";

    root   /home/container/;
    index  index.html index.htm;

    location / {
        ${Online_Mode} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode2} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode3} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode4} # Verifica se a conex√£o vai ser local ou externa


    location /Arquivos/ {
        alias /home/container/Arquivos/;
        index  ___i;        # realmente n√£o precisamos de √≠ndice aqui, apenas listando arquivos
        autoindex on;
        autoindex_format json;
        disable_symlinks off;

    location /Arquivos/Publica {
        allow all;

      }
    }
  }
}

EOL
  else
  echo "${bold}${lightgreen}==> üü† Default.conf Personalizado, pulando no break."
  fi
    else
      echo "${bold}${lightgreen}==> üî¥ Verificador do Default.conf ${bold}${vermelho}n√£o foi detectado ${bold}${lightgreen}, Iniciando download."
      mkdir ./Arquivos
      mkdir ./Arquivos/Publica
      rm ./nginx/conf.d/default.conf
cat > ./nginx/conf.d/default.conf << EOL
server {
    listen ${SERVER_PORT};
    server_name ""; # ${Online_Mode} antiga variante

    root   /home/container/;
    index  index.html index.htm;

    location / {
        ${Online_Mode} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode2} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode3} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode4} # Verifica se a conex√£o vai ser local ou externa

    location /Arquivos/ {
        alias /home/container/Arquivos/;
        index  ___i;        # realmente n√£o precisamos de √≠ndice aqui, apenas listando arquivos.
        autoindex on;
        autoindex_format json;
        disable_symlinks off; 

    location /Arquivos/Publica {
        allow all;

      }
    }
  }
}
EOL
      echo "${bold}${lightgreen}==> üü† Criando Introdu√ß√£o."
      curl -s https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/introducao.md -o ./Arquivos/introducao.md
      touch ./Status/Default.conf_instalado
    fi
# Fim do default.conf--------------------------------------------

  # Setando Vers√£o-------------------------------------------------
    if [[ -f "./Status/Versao_Atual" ]]; then
      echo "${bold}${lightgreen}==> üü¢ Vers√£o Atual:$current_version."
    else
      echo "${bold}${lightgreen}==> üü¢ Setando Vers√£o Recente:$latest_version."
      curl -s https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/Versao_Atual -o ./Status/Versao_Atual
    fi
  # Fim Setando Vers√£o--------------------------------------------

  echo "${bold}${lightgreen}==> üü¢ Verifica√ß√£o Completa."

  # Iniciando HTML------------------------------------------------
    if [ "${HTML_LOCAL}" == "1" ]; then
    echo "${bold}${lightgreen}==> üü¢ Iniciando HTML"
    if [[ -f "./index.html" ]]; then
    echo "${bold}${lightgreen}==> üü¢ Iniciando HTML Na Nuvem"
      rm ./index.html
      curl -s https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/index.html -o ./index.html
    else
      curl -s https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/index.html -o ./index.html
    fi
    else
    if [[ -f "./index.html" ]]; then
      echo "${bold}${lightgreen}==> üü† Iniciando HTML Local"
    else
      echo "${bold}${lightgreen}==> üü† HTML Local n√£o detectado, baixando."
      curl -s https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/index.html -o ./index.html
    fi
    fi
  # Fim HTML------------------------------------------------------

  # Permiss√µes-----------------------------------------------------
    echo "${bold}${lightgreen}==> üü¢ Setando permiss√µes padr√µes."
    chmod 777 ./*
  # Fim Permiss√µes-------------------------------------------------

  # Limpar Tmp-----------------------------------------------------
    echo "${bold}${lightgreen}==> üü¢ Removendo Arquivos Temporarios "
    rm -rf /home/container/tmp/*
  # Fim Limpar Tmp-------------------------------------------------

  # Dialogo--------------------------------------------------------
    echo "${bold}${lightgreen}==> üü¢ Iniciado Nginx "
    echo "${bold}${lightgreen}==> üü¢ Inicializado com sucesso"
    echo "${bold}${lightgreen}==> üü¢ Finalizando iniciador online"
    echo " "
    echo "${bold}${lightgreen}=============================================================================="
    echo "${bold}${lightgreen}==> üü¢ Final do Entrypoint: $entrypoint_version                                             <=="
    echo "${bold}${lightgreen}=============================================================================="
    echo " "
    echo " "
    echo " "
    echo " "
    echo " "
  # Fim Dialogo----------------------------------------------------

  # Comando Nginx start--------------------------------------------
  nohup /usr/sbin/nginx -c /home/container/nginx/nginx.conf -p /home/container/ > log_nginx.txt 2>&1 &
  pid=$!

  # Continua a exibir as √∫ltimas linhas do arquivo de log a cada segundo
  while true; do
  tail -n 10 -F log_nginx.txt
  sleep 1
  done &
  tail_pid=$!

  # Aguarda input do usu√°rio
  while read line; do
  if [ "$line" = "Sistema Entrypoint.sh Parar" ]; then
    kill $pid
    echo "${bold}${lightgreen}=============================================================================="
    echo "${bold}${lightgreen}==                                                                          =="
    echo "${bold}${lightgreen}== üü¢ Comando de Desligamento executado.                                     =="
    echo "${bold}${lightgreen}==                                                                          =="
    echo "${bold}${lightgreen}=============================================================================="
    cat ./log_nginx.txt >> ./Arquivos/log_nginx.txt
    break
    elif [ "$line" != "Sistema Entrypoint.sh Parar" ]; then
    echo "${bold}${lightgreen}=============================================================================="
    echo "${bold}${lightgreen}==                                                                          =="
    echo "${bold}${lightgreen}== üî¥ Comando Invalido, oque voc·∫Ω est√° tentando fazer?                       =="
    echo "${bold}${lightgreen}==                                                                          =="
    echo "${bold}${lightgreen}=============================================================================="
    else
  # Dialogo de Erro------------------------------------------------
    echo " "
    if [ "${REPARAR_SISTEMA}" == "1" ]; then
    echo "${bold}${lightgreen}=============================================================================="
    echo "${bold}${lightgreen}==                                                                          =="
    echo "${bold}${lightgreen}==  ${bold}${vermelho} O Entrypoint Foi Finalizado Com Erro, Sistema de Restaura√ß√£o ativado ${bold}${lightgreen}  =="
    echo "${bold}${lightgreen}==            ${bold}${vermelho} Caso n√£o funcione, entre em contato com Drylian. ${bold}${lightgreen}            =="
    echo "${bold}${lightgreen}==                      ${bold}${vermelho} https://github.com/drylian/ ${bold}${lightgreen}                       =="
    echo "${bold}${lightgreen}==                                                                          =="
    echo "${bold}${lightgreen}=============================================================================="
    touch ./Status/Formatar_Sistema
    else
    echo "${bold}${lightgreen}=============================================================================="
    echo "${bold}${lightgreen}==                                                                          =="
    echo "${bold}${lightgreen}== ${bold}${vermelho}O Entrypoint Foi Finalizado Com Erro, Sistema de Restaura√ß√£o desativado${bold}${lightgreen}  =="
    echo "${bold}${lightgreen}==                           ${bold}${vermelho} - Sem Suporte -  ${bold}${lightgreen}                             =="
    echo "${bold}${lightgreen}==                                                                          =="
    echo "${bold}${lightgreen}=============================================================================="
    fi
  # Fim Dialogo de Erro--------------------------------------------
  fi
  done
  # Interrompe a exibi√ß√£o das logs
  kill $tail_pid
  # Fim Nginx start------------------------------------------------
  
else
  # Dialogo--------------------------------------------------------
    echo "${bold}${vermelho}================================================================================"
    echo "${bold}${vermelho}= O Script de Inicia√ß√£o est√° Desativado, iniciando sem script(N√£o recomendado) ="
    echo "${bold}${vermelho}= O Sistema apenas ir√° carregar(se for necessario) o Default.conf e a Conex√£o. ="
    echo "${bold}${vermelho}================================================================================"
  # Fim Dialogo----

# Sistema do default.conf----------------------------------------
if [[ -f "./Status/Default.conf_instalado" ]]; then
echo "${bold}${lightgreen}==> üü¢ Default.conf ja carregado, executando Padr√µes no Break."
if [ -z "${DEFAULT_CONF}" ] || [ "${DEFAULT_CONF}" == "1" ]; then
rm ./nginx/conf.d/default.conf
cat > ./nginx/conf.d/default.conf << EOL
server {
    listen ${SERVER_PORT};
    server_name "";

    root   /home/container/;
    index  index.html index.htm;

    location / {
        ${Online_Mode} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode2} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode3} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode4} # Verifica se a conex√£o vai ser local ou externa


    location /Arquivos/ {
        alias /home/container/Arquivos/;
        index  ___i;        # realmente n√£o precisamos de √≠ndice aqui, apenas listando arquivos
        autoindex on;
        autoindex_format json;
        disable_symlinks off;

    location /Arquivos/Publica {
        allow all;

      }
    }
  }
}

EOL
  else
  echo "${bold}${lightgreen}==> üü† Default.conf Personalizado, pulando no break."
  fi
    else
      echo "${bold}${lightgreen}==> üî¥ Verificador do Default.conf ${bold}${vermelho}n√£o foi detectado ${bold}${lightgreen}, Iniciando download."
      mkdir ./Arquivos
      mkdir ./Arquivos/Publica
      rm ./nginx/conf.d/default.conf
cat > ./nginx/conf.d/default.conf << EOL
server {
    listen ${SERVER_PORT};
    server_name ""; # ${Online_Mode} antiga variante

    root   /home/container/;
    index  index.html index.htm;

    location / {
        ${Online_Mode} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode2} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode3} # Verifica se a conex√£o vai ser local ou externa
        ${Online_Mode4} # Verifica se a conex√£o vai ser local ou externa

    location /Arquivos/ {
        alias /home/container/Arquivos/;
        index  ___i;        # realmente n√£o precisamos de √≠ndice aqui, apenas listando arquivos.
        autoindex on;
        autoindex_format json;
        disable_symlinks off; 

    location /Arquivos/Publica {
        allow all;

      }
    }
  }
}
EOL
      echo "${bold}${lightgreen}==> üü† Criando Introdu√ß√£o."
      curl -s https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/introducao.md -o ./Arquivos/introducao.md
      touch ./Status/Default.conf_instalado
    fi
# Fim do default.conf--------------------------------------------

if [[ -f "./index.html" ]]; then
    echo "${bold}${lightgreen}==> üü¢ Iniciando HTML Local"
    else
    echo "${bold}${lightgreen}==> üü¢ HTML Local n√£o encontrado, Baixando"
      curl -s https://raw.githubusercontent.com/drylian/Eggs/main/Connect/Nginx/index.html -o ./index.html
  fi
  cd /home/container

  # Substituir vari√°veis ‚Äã‚Äãde inicializa√ß√£o
  MODIFIED_STARTUP=`eval echo $(echo ${STARTUP} | sed -e 's/{{/${/g' -e 's/}}/}/g')`
  echo ":/home/container$ ${MODIFIED_STARTUP}"

  # Execute o servidor
  ${MODIFIED_STARTUP}
fi
rm ./log_nginx.txt
echo " "
echo "${bold}${lightgreen}=============================================================================="
echo "${bold}${lightgreen}==                                                                          =="
echo "${bold}${lightgreen}== üü¢ Sistema Desligado, At√© Mais.                                           =="
echo "${bold}${lightgreen}==                                                                          =="
echo "${bold}${lightgreen}=============================================================================="
